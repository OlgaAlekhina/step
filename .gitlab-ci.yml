# default:
#   tags:
#     - step_runner

variables:
  IMAGE_NAME: olgaalekhina/step
  IMAGE_TAG: app-1.0

stages:
  - run_tests
  # - build
  - deploy

run_tests:
  stage: run_tests
  tags:
    - step_runner
  image: docker:27.3.1
  services:
    - docker:27.3.1-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
    # - pip install -r requirements.txt
    - cp "$ENVS_TEST" .env 
    # - apt-get update && apt-get install make
  script:
    - echo 'testing configs'
    - docker pull olgaalekhina/configs_registry:sqlite
    - docker images
    - docker run -d --network=host olgaalekhina/configs_registry:sqlite
    - curl -X 'GET' 'http://127.0.0.1:8002/api/configs/'
    # - make run_tests
  rules:
    - if: $CI_COMMIT_BRANCH == "master"

# build_image:
#   stage: build
#   image: docker:27.3.1
#   services:
#    - docker:27.3.1-dind
#   variables:
#    DOCKER_TLS_CERTDIR: "/certs"
#   before_script:
#    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
#   script:
#    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
#    - docker push $IMAGE_NAME:$IMAGE_TAG
#   rules:
#    - if: $CI_COMMIT_BRANCH == "master"

deploy:
  stage: deploy
  tags:
    - step_runner
  image: ubuntu:18.04
  before_script:
    - apk update && apk add openssh-client gettext
    # - apk update && apk add bash
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod -R 700 ~/.ssh
    - echo 'echo $SSH_PASSPHRASE_GATE' > ~/.ssh/tmp1 && chmod 700 ~/.ssh/tmp1
    - echo 'echo $SSH_PASSPHRASE_TEST' > ~/.ssh/tmp2 && chmod 700 ~/.ssh/tmp2
    - echo "$SSH_PRIVATE_KEY_GATE" | tr -d '\r' | DISPLAY=None SSH_ASKPASS=~/.ssh/tmp1 ssh-add -
    - echo "$SSH_PRIVATE_KEY_TEST" | tr -d '\r' | DISPLAY=None SSH_ASKPASS=~/.ssh/tmp2 ssh-add -
    - cp "$SSH_CONFIG" ~/.ssh/config 
   
  script:
    - echo "Deploying backend"
    - ssh cloveri.host "cd /home/devops/backend &&
        docker-compose down &&
        docker rmi $IMAGE_NAME:$IMAGE_TAG &&
        docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
        docker pull $IMAGE_NAME:$IMAGE_TAG &&
        docker-compose up -d"
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
